IntExpression -> evaluate, ultimately store result in a provided register
                 int literal -> move the number into the provided register
                 identifier -> find the offset of the identifier
                               if found, move the value from that memory 
                               location to register

IntDeclaration -> evaluate int expression, store in ebx
                  if identifier does not exist, push to stack and update
                  offset table
                  if identifier does already exist, find its offset,
                  and update the value in that memory location
                  
ExitStatement -> put 1 into eax
                 evaluate IntExpression, store in ebx
                 exit with value in ebx